<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'easy_deploy.command.deploy' shared service.

include_once $this->targetDirs[3].'/vendor/symfony/console/Command/Command.php';
include_once $this->targetDirs[3].'/vendor/easycorp/easy-deploy-bundle/src/Command/DeployCommand.php';
include_once $this->targetDirs[3].'/vendor/symfony/config/FileLocatorInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/config/FileLocator.php';
include_once $this->targetDirs[3].'/vendor/symfony/http-kernel/Config/FileLocator.php';

$this->privates['easy_deploy.command.deploy'] = $instance = new \EasyCorp\Bundle\EasyDeployBundle\Command\DeployCommand(($this->privates['file_locator'] ?? $this->privates['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->targetDirs[3].'/src/Resources'), array(0 => ($this->targetDirs[3].'/src')))), (($this->hasParameter("kernel.project_dir")) ? ($this->getParameter("kernel.project_dir")) : (($this->getParameter("kernel.root_dir") . "/.."))), ($this->targetDirs[2].'/log'));

$instance->setName('deploy');

return $instance;
